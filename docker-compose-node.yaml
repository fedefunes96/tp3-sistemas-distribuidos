version: '3.5'
services:
  #rabbitmq:
  #  container_name: rabbitmq
  #  image: rabbitmq:latest
  #  ports:
  #    - 15672:15672
  #  networks:
  #    - test-network

  node_watcher_a:
    container_name: node_watcher_a
    image: node_watcher:latest
    entrypoint: python3 /main.py
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - INIT_QUEUE=health_status_queue
      - MY_ID=A
      - MY_DIR=node_watcher_a
      - PORT=43343
      - NODE_A=node_watcher_b
      - NODE_B=node_watcher_c
      - NODE_C=node_watcher_d
      - NODE_D=node_watcher_e
      - ID_A=B
      - ID_B=C
      - ID_C=D
      - ID_D=E
    networks:
      - test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  node_watcher_b:
    container_name: node_watcher_b
    image: node_watcher:latest
    entrypoint: python3 /main.py
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - INIT_QUEUE=health_status_queue
      - MY_ID=B
      - MY_DIR=node_watcher_b
      - PORT=43343
      - NODE_A=node_watcher_a
      - NODE_B=node_watcher_c
      - NODE_C=node_watcher_d
      - NODE_D=node_watcher_e
      - ID_A=A
      - ID_B=C
      - ID_C=D
      - ID_D=E        
    networks:
      - test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  node_watcher_c:
    container_name: node_watcher_c
    image: node_watcher:latest
    entrypoint: python3 /main.py
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - INIT_QUEUE=health_status_queue
      - MY_ID=C
      - MY_DIR=node_watcher_c
      - PORT=43343
      - NODE_A=node_watcher_a
      - NODE_B=node_watcher_b
      - NODE_C=node_watcher_d
      - NODE_D=node_watcher_e   
      - ID_A=A
      - ID_B=B
      - ID_C=D
      - ID_D=E            
    networks:
      - test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  node_watcher_d:
    container_name: node_watcher_d
    image: node_watcher:latest
    entrypoint: python3 /main.py
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - INIT_QUEUE=health_status_queue
      - MY_ID=D
      - MY_DIR=node_watcher_d
      - PORT=43343
      - NODE_A=node_watcher_a
      - NODE_B=node_watcher_c
      - NODE_C=node_watcher_b
      - NODE_D=node_watcher_e   
      - ID_A=A
      - ID_B=C
      - ID_C=B
      - ID_D=E
    networks:
      - test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock   
      
  node_watcher_e:
    container_name: node_watcher_e
    image: node_watcher:latest
    entrypoint: python3 /main.py
    restart: on-failure
    environment:
      - PYTHONUNBUFFERED=1
      - INIT_QUEUE=health_status_queue
      - MY_ID=E
      - MY_DIR=node_watcher_e
      - PORT=43343
      - NODE_A=node_watcher_a
      - NODE_B=node_watcher_c
      - NODE_C=node_watcher_d
      - NODE_D=node_watcher_b
      - ID_A=A
      - ID_B=C
      - ID_C=D
      - ID_D=B            
    networks:
      - test-network
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock        
networks:
  test-network:
#    external:
#      name: ${SERVER_NAME}-network
