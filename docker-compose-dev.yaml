version: '3.5'
services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:latest
    ports:
      - 15672:15672
    networks:
      - test-network

  processor:
    image: processor:latest
    entrypoint: cargo run
    restart: on-failure
    environment:
      - RABBITMQ_ADDR=amqp://guest:guest@rabbitmq:5672
      - LOG_LEVEL=INFO
      - READER_QUEUE=reader_q
      - READER_PLACES_QUEUE=reader_places_q
      - QUEUE_MAP=map_city
      - QUEUE_DATE=date_redirector_worker
      - QUEUE_COUNT=count_controller_worker
      - EOF_MAP=count_controller_worker
      - EOF_MAP=eof_map
      - EOF_COUNT=eof_count
      - EOF_DATE=eof_date
      - TOPIC_PLACES=places
    depends_on:
      - rabbitmq
    networks:
      - test-network

  map_master_controller:
    container_name: master_map_worker
    image: master_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=eof_map
      - SEND_QUEUE=map_city
      - STATUS_QUEUE=health_status_queue
      - TOTAL_WORKERS=${TOTAL_MAP_WORKERS}
      - WORKER_ID=master_map_worker
      - WORKER_TYPE=master_map_worker
    networks:
      - test-network

  map_worker:  
    image: map_worker:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=map_city
      - SEND_QUEUE=cities_resume
      - MASTER_SEND_QUEUE=master_map
      - STATUS_QUEUE=health_status_queue
      - TOPIC_PLACES=places
      - WORKERS=2
      - WORKER_ID=map_worker_1
      - WORKER_TYPE=map_worker      
    networks:
      - test-network
        
  cities_resume1:  
    container_name: city_resumer
    image: cities_resume:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=cities_resume
      - SEND_QUEUE=top_cities
      - MASTER_SEND_QUEUE=resume_master
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=city_resumer
      - WORKER_TYPE=city_resumer_am         
    networks:
      - test-network
  
  resume_master_controller:  
    container_name: resume_master_controller
    image: resume_master_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=master_map
      - SEND_QUEUE=cities_resume
      - TOTAL_WORKERS=${TOTAL_MAP_WORKERS}
      - STATUS_QUEUE=health_status_queue
    networks:
      - test-network
  
  #resume_master_controller2:  
  #  container_name: resume_master_controller2
  #  image: resume_master_controller:latest
  #  entrypoint: python3 /main.py
  #  restart: on-failure
  #  depends_on:
  #    - rabbitmq
  #  links: 
  #    - rabbitmq
  #  environment:
  #    - PYTHONUNBUFFERED=1
  #    - RECV_QUEUE=resume_master
  #    - SEND_QUEUE=top_cities
  #    - TOTAL_WORKERS=1

  top_cities_controller:  
    container_name: top_cities_worker
    image: top_cities_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=top_cities
      - SEND_QUEUE=summary_resume
      - TOTAL_WORKERS=1
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=top_cities_worker
      - WORKER_TYPE=top_cities
    networks:
      - test-network
  
  summary_controller:  
    container_name: summary_worker
    image: summary_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=summary_resume
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=summary_worker
      - WORKER_TYPE=summary_worker
    volumes:
      - ./summary_controller/summary:/summary
    networks:
      - test-network
  
  date_redirector_master_controller:
    container_name: master_date_worker
    image: master_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=eof_date
      - SEND_QUEUE=date_redirector_worker
      - TOTAL_WORKERS=${TOTAL_DATE_WORKERS}
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=master_date_worker
      - WORKER_TYPE=master_date_worker
    networks:
      - test-network
  
  date_redirector_worker:  
    image: date_redirector_worker:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=date_redirector_worker
      - SEND_QUEUE=dates_resume
      - MASTER_SEND_QUEUE=master_date
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=date_worker_1
      - WORKER_TYPE=date_worker
    networks:
      - test-network
  
  resume_date_master_controller:  
    container_name: resume_date_master_controller
    image: resume_master_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=master_date
      - SEND_QUEUE=dates_resume
      - TOTAL_WORKERS=${TOTAL_DATE_WORKERS}
      - STATUS_QUEUE=health_status_queue
    networks:
      - test-network
  
  dates_resume1:  
    container_name: date_resumer
    image: dates_resume:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=dates_resume
      - SEND_QUEUE=date_sorter
      - MASTER_SEND_QUEUE=resume_date_master
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=date_resumer
      - WORKER_TYPE=date_resumer_jan      
    networks:
      - test-network
  
  #resume_date_master_controller2:  
  #  container_name: resume_date_master_controller2
  #  image: resume_master_controller:latest
  #  entrypoint: python3 /main.py
  #  restart: on-failure
  #  depends_on:
  #    - rabbitmq
  #  links: 
  #    - rabbitmq
  #  environment:
  #    - PYTHONUNBUFFERED=1
  #    - RECV_QUEUE=resume_date_master
  #    - SEND_QUEUE=date_sorter
  #    - TOTAL_WORKERS=1

  date_sorter:  
    container_name: date_sorter_worker
    image: date_sorter:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=date_sorter
      - SEND_QUEUE=summary_resume
      - TOTAL_WORKERS=1
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=date_sorter_worker
      - WORKER_TYPE=date_sorter     
    networks:
      - test-network
  
  count_master_controller:
    container_name: master_count_worker
    image: master_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=eof_count
      - SEND_QUEUE=count_controller_worker
      - TOTAL_WORKERS=${TOTAL_COUNT_WORKERS}
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=master_count_worker
      - WORKER_TYPE=master_count_worker
    networks:
      - test-network
  
  count_controller_worker:  
    image: count_controller_worker:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=count_controller_worker
      - SEND_QUEUE=count_summary
      - MASTER_SEND_QUEUE=master_count
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=count_worker_1
      - WORKER_TYPE=count_worker
    networks:
      - test-network
  
  resume_count_master_controller:  
    container_name: resume_count_master_controller
    image: resume_master_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=master_count
      - SEND_QUEUE=count_summary
      - TOTAL_WORKERS=${TOTAL_COUNT_WORKERS}
      - STATUS_QUEUE=health_status_queue
    networks:
      - test-network
  
  count_summary_controller:  
    container_name: count_resumer
    image: count_summary_controller:latest
    entrypoint: python3 /main.py
    restart: on-failure
    depends_on:
      - rabbitmq
    links: 
      - rabbitmq
    environment:
      - PYTHONUNBUFFERED=1
      - RECV_QUEUE=count_summary
      - SEND_QUEUE=summary_resume
      - STATUS_QUEUE=health_status_queue
      - WORKER_ID=count_resumer
      - WORKER_TYPE=count_resume      
    networks:
      - test-network
   
networks:
  test-network:
    name: ${COMPOSE_PROJECT_NAME}-network